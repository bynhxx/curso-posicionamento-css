/* para que não haja quebra do layout
o ideal é que as classes com definições
da estrutura estejam em divs (ou elementos)
diferentes das demais */


.container{
    max-width: 960px;
    margin: 0 auto; 
}

.container::after, container::before{
    content: '';
    display: table;
    clear: both; 
}


/* 
fórmula para calcular o grid: 
largura total / total de colunas * numero do grid atual
100% / 12 * grid-atual

- as margens (gutter) pode-se manter em pixels
pois se for em porcentagem, o resultado pode
ser diferente do planejado ja que o tamanho
da tela vai variar.  Entao, apenas subtrair 
o valor absoluto da margem na definição da largura
do grid. 
*/



.grid-1, .grid-2, .grid-3, .grid-4, .grid-5,
.grid-6, .grid-7, .grid-8, .grid-9, .grid-10,
.grid-11, .grid-12 {
    margin-left: 10px;
    margin-right: 10px;
    float: left;
    display: block;
    min-height: 1px;
}

.grid-1{
    width: calc(8.33% - 20px);
}

.grid-2{
    width: calc(16.66% - 20px);
}

.grid-3{
    width: calc(25% - 20px);
}

.grid-4{
    width: calc(33.33% - 20px);
}

.grid-5{
    width: calc(41.66% - 20px);
}

.grid-6{
    width: calc(50% - 20px);
}

.grid-7{
    width: calc(58.33% - 20px);
}

.grid-8{
    width: calc(66.66% - 20px);
}

.grid-9{
    width: calc(75% - 20px);
}

.grid-10{
    width: calc(88.33% - 20px);
}

.grid-11{
    width: calc(91.66% - 20px);
}

.grid-12 {
    width: calc(100% - 20px);
}


@media only screen and (max-width: 739px){
    .container {
        max-width: 300px;

    }

    .grid-1, .grid-2, .grid-3, .grid-4, .grid-5,
.grid-6, .grid-7, .grid-8, .grid-9, .grid-10,
.grid-11, .grid-12 {
    width: 100%;
    margin-left: 0;
    margin-right: 0;
    float: none;    
    }
}